<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="sid-19693776">
    
    <title>Scenarios</title>
    <section id="sid-19693778">
      
      <title>What is a Scenario?</title>
      <para>A scenario is essential a representation of a particular path through a business process.</para>
      <para>Business processes usually have number paths that can be taken during a transaction. A simple example is when purchasing some goods, where one scenario maybe that the customer successfully completes their purchase, after receiving an appropriate credit rating. Another scenario may be that the customer has a bad credit rating and therefore the business transaction must reject the customer's purchase request.</para>
      <para>In most business transactions there will be many different variations that could occur, and by defining these scenarios it is possible for business stakeholders to clearly define their needs (i.e. requirements), and for those scenarios to be used in subsequent phases of the software development lifecycle to ensure the system being built meets those needs.</para>
      <para>An example of a scenario representing a successful purchase is:</para>
      <para>
        <figure>
<title>Example of a complete scenario</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693778/SuccessfulPurchase.png" width="5in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
    </section>
    <section id="sid-19693782">
      
      <title>Creating a Scenario</title>
      <para>
        After creating an Eclipse project, and optionally a sub-folder to contain the scenarios being created, select the
        <emphasis role="italics">"New-&gt;Other..."</emphasis>
        menu item on the context menu for the project or folder in which the scenario be created. This will show the following dialog:
      </para>
      <para>
        <figure>
<title>Wizard for creating a new scenario</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693782/NewScenarioWizard.png" width="3in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>
        Select the
        <emphasis role="italics">Savara-&gt;Scenario</emphasis>
        item and then press the
        <emphasis role="italics">Next</emphasis>
        button, when you will be requested to enter the name of the scenario file, and then press the
        <emphasis role="italics">Finish</emphasis>
        button.
        <figure>
<title>The initial empty scenario</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693782/SPEmpty.png" width="5in" />
            </imageobject>
          </mediaobject>
        </figure>
        
        When the scenario is first created, it will have a blank canvas. If the Properties view is selected (at the bottom of the Eclipse window), and then the canvas is selected, the Properties view will show the properties associated with the scenario, i.e. name, author and description. These fields should be complete to provide a clear identification of the scenario, its owner and the details of what use case it represents in the context of the system being built.
      </para>
    </section>
    <section id="sid-19693785">
      
      <title>Adding Roles to a Scenario</title>
      <para>
        A
        <emphasis role="italics">Role</emphasis>
        is a participant within the scenario. It represents an entity that is actively involved in performing tasks to help achieve a particular business goal.
      </para>
      <para>We currently assume that there is a one-to-one mapping between a role and a service being implemented, although this will not always be the case. On some occasions a role may begin as a high level concept, which may evolve through the design process to become multiple services, possibly implemented by a single top level composite service associated with the role. It is also possible that a role may represent a human (i.e. manual) task.</para>
      <para>To add a new role to the scenario, simply select the Role item from the left hand palette and click on the canvas. The role is displayed as a vertical line, with a box at the top containing the role name (which is "&lt;unknown&gt;" until a valid value is defined).</para>
      <para>
        <figure>
<title>Adding a role to the scenario</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693785/FirstRole.png" width="3in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>When the role is selected, the Properties view will show the property fields appropriate for this item. At this point, the role should be named. For example, in our example scenario we will create three roles, Buyer, Store and CreditAgency:</para>
      <para>
        <figure>
<title>Scenario with three roles defined</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693785/SP3Roles.png" width="5in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
    </section>
    <section id="sid-19693799">
      
      <title>Defining an Interaction</title>
      <para>An interaction represents the exchanging of a message from one role to another role(s).</para>
      <para>This is achieve by dragging a link between the 'originating' (or 'source') role to the 'destination' (or 'target') role. This will cause 'send' and 'receive' message events to be added to the source and target roles, with a link between drawn between them.</para>
      <para>
        <figure>
<title>Adding a message link to represent an interaction from one role to another</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693799/UnknownMessageLink.png" width="4in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>
        While the link is selected, go to the Properties view to set the relevant properties for the message.
        <figure>
<title>Setting the properties for a message link</title>
<mediaobject>
<imageobject>
            <imagedata fileref="author/download/attachments/19693799/MessageLinkProps1.png" width="5in" />
          </imageobject>
</mediaobject>
</figure>
      </para>
      <para>
        The
        <emphasis role="italics">"Error Expected"</emphasis>
        property is a checkbox that can be used to indicate that this message is expected to be incorrect when used for simulating or testing against other artifacts.
      </para>
      <para>
        The
        <emphasis role="italics">"Operation"</emphasis>
        field represents the name of the operation being performed. In cases where the target architecture is message oriented, this may not seem necessary, however it can be useful to clarify the purpose of the interaction.
      </para>
      <para>
        The optional
        <emphasis role="italics">"Fault"</emphasis>
        field is used to provide a fault name for the interaction, in situations where the message exchange represents a fault response.
      </para>
      <para>
        The
        <emphasis role="italics">"Parameters"</emphasis>
        list represents the one or more pieces of information that should be exchanged with the message. Pressing the
        <emphasis role="italics">'Add'</emphasis>
        button will show another dialog window:
      </para>
      <para>
        <figure>
<title>Define a message link parameter</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693799/MessageLinkParameter.png" width="3in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>
        The
        <emphasis role="italics">"Type"</emphasis>
        field represents a fully qualified type name. The value within the curly braces defines the namespace, and the remaining text is the 'local part'.
      </para>
      <para>
        The
        <emphasis role="italics">"Value"</emphasis>
        field represents a path to the file containing the example message value. The path can define a relative path, as in the image above, from the scenarios location. So this example indicates that the message value file (
        <emphasis role="italics">BuyRequest.xml</emphasis>
        ) is in the same folder as the scenario file that is referencing it.
        <figure>
<title>Message link properties with parameter defined</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693799/MessageLinkProps2.png" width="5in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>Once the parameter has been defined, it will be displayed in the parameters list as above and the text associated with the message link will be updated to summarize the information.</para>
      <para>
        <figure>
<title>Message information displayed on the diagram link</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693799/MessageLinkBuy.png" width="4in" />
            </imageobject>
          </mediaobject>
        </figure>
        
        It is also possible to select the individual send and/or receive message events from the palette and attach them to the appropriate roles, with or without a link to connect them. For example, if a 'send message event' is placed on a Role, with the associated message information, this will indicate that the role sends a message but the intended recipient does not get it for some reason.
      </para>
      <para>This is an example of where we want to represent an invalid (or negative) use case. Although this may seem counter intuitive, it can be useful to be able to specify anti use cases, as a way to document situations that we don't want to be implemented. Through the use of the 'Error Expected' field (associated with the Message Link properties) it is also possible to identify which parts of these negative scenarios should observe errors, and therefore can be used for automated testing.</para>
    </section>
    <section id="sid-19693808">
      
      <title>Representing Elapsed Time</title>
      <para>As previously described, scenarios allow us to represent different paths that may occur through a business process.</para>
      <para>Although most of these paths will be based on actions taken by the various roles involved in the scenario, occasionally scenarios also need to be able to indicate what should happen when no action occurs - i.e. a 'time out' situation.</para>
      <para>As we are building up our scenario, if appropriate, we can introduce an 'elapsed time' event into the scenario. So if we start with an interaction to the CreditAgency, e.g.</para>
      <para>
        <figure>
<title>Scenario showing path where timeout will not occur</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693808/ElapsedTime1.png" width="4.5in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>We then want to be able to define a scenario to represent the case where the CreditAgency does not respond within a certain time period. To add an 'elapsed time' event, simply select the "Elapsed Time" icon from the palette and select the vertical location on the diagram where the event should be added. It will introduce a region horizontally across all roles.</para>
      <para>
        <figure>
<title>Scenario representing the case where a timeout occurs, and the behaviour that should follow</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693808/ElapsedTime2.png" width="5in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>This can be used to document that the maximum timeout should be 2 minutes (120 seconds), and also used during simulation/service testing to ensure the implementation correctly handles the timeout.</para>
    </section>
    <section id="sid-19693819">
      
      <title>Composing Scenarios</title>
      <para>Scenarios, like any other model, can benefit from reuse.</para>
      <para>This section shows how scenarios can be composed, to allow common "sub" scenarios to be reused as part of high level scenarios. The benefit of this approach is the maintenance of scenarios, where a common sequence of messages exchanges between the same set of roles, is relevant to many use cases. When it becomes necessary to make a change to this common scenario, it only needs to be performed in one location to be applicable to all use cases.</para>
      <para>The following is a scenario related to performing the credit check:</para>
      <para>
        <figure>
<title>The scenario to be shared (or composed) within multiple higher level scenarios</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693819/ScenarioCompositionSub.png" width="4in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>This can then be used within a higher level version of the SuccessfulPurchase scenario:</para>
      <para>
        <figure>
<title>An example of a scenario that composes another scenario</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693819/ScenarioCompositionMain.png" width="5in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
    </section>
    <section id="sid-19693824">
      
      <title>Generating an Image</title>
      <para>The Scenario diagram can be generated as an image for inclusion in documents or simply to be printed.</para>
      <para>
        To generate the image, select the
        <emphasis role="italics">"Scenario-&gt;Generate Image"</emphasis>
        menu item from the context menu associated with the scenario background:
      </para>
      <para>
        <figure>
<title>Generating an image from the scenario</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693824/ScenarioGenerateImage+.png" width="5in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>This will display a file dialog to select the name, type (e.g. bmp, png, jpeg, etc) and location for the generated image file.</para>
    </section>
    <section id="sid-19693826">
      
      <title>Scenario Simulation</title>
      <para>The scenario simulation is triggered either using the button on the toolbar, or the "Scenario-&gt;Simulate" menu item on the context menu associated with the diagram background:</para>
      <para>
        <figure>
<title>Toolbar button for simulating the scenario</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693826/ScenarioSimulateButton.png" width="2in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>This will display a dialog window to capture information used to simulate each of the roles defined in the scenario, e.g.</para>
      <para>
        <figure>
<title>Scenario simulation dialog</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693826/ScenarioSimulationDialogEmpty.png" width="3in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>The next step is to associate a model with one of the roles. This is achieved by selecting the "..." button next to the model field, which allows the user to select the model file. A model file can be anything - if the file is a supported representation, then its selection will result in the "Model Role" and "Simulator" combo boxes being populated with valid values.</para>
      <para>
        The
        <emphasis role="italics">"Model Role"</emphasis>
        field displays a list of roles that are derived from the selected model. This enables the role name defined in the scenario (shown in blue associated with the border), to be associated with the role within the model.
      </para>
      <para>
        The
        <emphasis role="italics">"Simulator"</emphasis>
        field displays the list of simulators that can be used to validate the scenario against the model. Some model types may have more than one simulator implementation - this will be discussed more in subsequent sections. When a new simulator is selected, then the
        <emphasis role="italics">"Model Role"</emphasis>
        list will be updated based on the list of model roles determined by that simulator.
      </para>
      <para>Once the first model has been selected, the user will be prompted to ask whether the same model should be used for all roles in the scenario.</para>
      <para>
        <figure>
<title>First model selected in the scenario simulation dialog</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693826/ScenarioSimulationModelSelected.png" width="3in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>If the model that was selected was specific to the role (i.e. it represented an implementation just relevant to the particular role), then press the No button. However if the model is associated with more than one role in the scenario (i.e. a choreography), then pressing the 'Yes' button populates the simulation dialog, using the "best guess" to select the model role relevant for the scenario role.</para>
      <para>
        <figure>
<title>Scenario simulation dialog fully configured to verify a choreography model</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693826/ScenarioSimulationAllModelsSet.png" width="3in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>When the "Simulate" button is pressed, then message events (associated with the specific roles) in the scenario are simulated against the models specified in the dialog. If the message event is valid, its node will be displayed in green. If however the event is unexpected, then it will be displayed in red. When this occurs, either select the message link or particular red node, and then pick the "Simulation Log" tab at the bottom, to see log information returned from the simulator regarding the erroneous events.</para>
      <para>NOTE: If a scenario 'message event' has been marked as 'Error Expected', then it will be displayed with a red border - but when simulated, the color within the message event node will be green if the node failed as expected, but red if the event did not generated an error.</para>
      <para>
        <figure>
<title>Example of a valid simulation against a choreography model</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693826/ScenarioSimulationSimulated.png" width="5in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>Finally the simulation can be reset,</para>
      <para>
        <figure>
<title>Toolbar button to reset the simulation</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="author/download/attachments/19693826/ScenarioSimulationReset.png" width="2in" />
            </imageobject>
          </mediaobject>
        </figure>
      </para>
    </section>
  </chapter>
